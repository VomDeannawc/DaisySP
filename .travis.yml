# Blacklist
branches:
  #only:
    #- master

language: c++

jobs:
    include:
        # check code style
        - os: linux
          name: Code Style
          dist: focal # required for clang-format-10
          addons:
              apt:
                  packages:
                      - clang-format-10
          env:
              - CODESTYLE=1
              - CLANG_FORMAT=clang-format-10
        # build
        - os: linux
          name: 'Build'
          addons:
              apt:
                  packages:
                      - build-essential
          env:
              - BUILD=1
        # build documentation
        - os: linux
          name: 'Build Documentation'
          addons:
              apt:
                  packages:
                      - doxygen
                      - pandoc
                      - texlive-fonts-recommended
                      - texlive-latex-extra
                      - texlive-fonts-extra
                      - dvipng
                      - texlive-latex-recommended
                      - lmodern # needed for style guide pdf
          env:
              - BUILD_DOCS=1
          deploy:
              provider: pages
              skip_cleanup: true
              local_dir: doc/html
              keep_history: true
              github_token: $GH_REPO_TOKEN
              on:
                branch: master
before_install:
    - |
        if [ "$BUILD" != "" ]; then
          travis_wait 45 bash ./ci/travis_setup_gcc_arm.sh
          export PATH="/tmp/gcc-arm/bin/:$PATH"
          export GCC_PATH="/tmp/gcc-arm/bin"
        fi

before_script:
    - |
        if [ "$CODESTYLE" != "" ]; then
          $CLANG_FORMAT -version
          ./ci/run-clang-format.py -r modules examples --clang-format-executable $CLANG_FORMAT
        fi

script:
    - |
        if [ "$BUILD_DOCS" != "" ]; then
          ./rebuild_docs.sh
        fi
    - |
        if [ "$BUILD" != "" ]; then
          make clean
          make
        fi
